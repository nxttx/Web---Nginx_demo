worker_processes 1;

events { worker_connections 1024; } # maximum number of simultaneous connections that can be opened by a worker process

http {
  proxy_read_timeout 300; # the amount of time a server will wait for a response from a client
  proxy_connect_timeout 300; # the amount of time a server will wait for a connection to be established with a client
  proxy_send_timeout 300; # the amount of time a server will wait for a response from a client when the server is sending data to the client

  # load balancer that randomly distributes requests to the upstream servers
  upstream app {
    # nothing; # Round-robin distribution; requests are distributed to the servers in turn
    # random; # random distribution; requests are distributed randomly
    # least_conn; # distribution based on the number of active connections; requests are distributed to the server with the least number of active connections
    # ip_hash; # distribution based on the client's IP address; requests from the same IP address are distributed to the same server

    server express;
    server flask;
  }

  server {
    listen 80;
    server_name localhost;

    location /api {
      proxy_pass http://app;

      # rewrite /api to / so that the app can handle the request
      rewrite ^/api/(.*)$ /$1 break;
    }

    # everything that is not /api/* is served from the static folder
    location / {
      root /usr/share/nginx/html;
      index index.html index.htm;
      try_files $uri $uri/ /index.html;
    }
  } 
}